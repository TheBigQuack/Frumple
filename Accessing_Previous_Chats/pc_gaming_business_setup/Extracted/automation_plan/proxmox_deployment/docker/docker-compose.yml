
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: investor_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-investor_db}
      POSTGRES_USER: ${POSTGRES_USER:-investor_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_change_me}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - investor_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-investor_user} -d ${POSTGRES_DB:-investor_db}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Next.js Application
  nextjs_app:
    build:
      context: /home/ubuntu/arcade_investor_site
      dockerfile: ../proxmox_deployment/docker/Dockerfile
    container_name: investor_nextjs
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER:-investor_user}:${POSTGRES_PASSWORD:-secure_password_change_me}@postgres:5432/${POSTGRES_DB:-investor_db}
      - NEXTAUTH_URL=https://${DOMAIN:-investor.local}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-generate_a_secure_secret_key_here}
      - NEXT_TELEMETRY_DISABLED=1
    volumes:
      - app_uploads:/app/public/uploads
    networks:
      - investor_network
    expose:
      - "3000"
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx Reverse Proxy
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: investor_nginx
    restart: unless-stopped
    depends_on:
      nextjs_app:
        condition: service_healthy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ssl_certs:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - investor_network
    environment:
      - DOMAIN=${DOMAIN:-investor.local}
    healthcheck:
      test: ["CMD-SHELL", "nginx -t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for session storage (optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: investor_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password_change_me}
    volumes:
      - redis_data:/data
    networks:
      - investor_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  ssl_certs:
    driver: local
  app_uploads:
    driver: local
  nginx_logs:
    driver: local

networks:
  investor_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
